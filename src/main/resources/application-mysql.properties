# database init, supports mysql too
database=mysql

# database local docker
# spring.datasource.url=${MYSQL_URL:jdbc:mysql://localhost/petclinic}
# spring.datasource.username=${MYSQL_USER:petclinic}
# spring.datasource.password=${MYSQL_PASS:petclinic}

# database rds
# spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# spring.datasource.url=${MYSQL_URL:jdbc:mysql://database-cipher.cnfzhgje9szw.ap-northeast-2.rds.amazonaws.com/petclinic} #old

# aws rds
# spring.datasource.url=${MYSQL_URL:jdbc:mysql://rds-an2-cipher-dev-mysql.cnfzhgje9szw.ap-northeast-2.rds.amazonaws.com/petclinic}
# spring.datasource.username=${MYSQL_USER:admin}
# spring.datasource.password=${MYSQL_PASS:taejin#4475}

# huawei-rds mysql80
# spring.datasource.url=${MYSQL_URL:jdbc:mysql://10.238.241.20/petclinic}
# spring.datasource.username=${MYSQL_USER:root}
# spring.datasource.password=${MYSQL_PASS:qwerty1234!}

# azure mysql80
spring.datasource.url=${MYSQL_URL:jdbc:mysql://mysqlserversmall.mysql.database.azure.com/petclinic}
spring.datasource.username=${MYSQL_USER:azureuser}
spring.datasource.password=${MYSQL_PASS:cns2025!@}


# SQL is written to be idempotent so this is safe
spring.sql.init.mode=always

# Hikari Setup (msec)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=200
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.connectionTimeout=10000
spring.datasource.hikari.maximumPoolSize=10
spring.datasource.hikari.idleTimeout=10000
# spring.datasource.hikari.maxLifeTime=580000
spring.datasource.hikari.maxLifeTime=270000
spring.datasource.hikari.autoCommit=true

# spring.datasource.hikari.connection-timeout=10000
# spring.datasource.hikari.validation-timeout=10000
# spring.datasource.hikari.maximum-pool-size=10
# spring.datasource.hikari.max-lifetime=10000
